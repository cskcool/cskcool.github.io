const x=Math.PI,c=2*x,u=1e-6,P=c-u;function E(a){this._+=a[0];for(let t=1,h=a.length;t<h;++t)this._+=arguments[t]+a[t]}function m(a){let t=Math.floor(a);if(!(t>=0))throw new Error(`invalid digits: ${a}`);if(t>15)return E;const h=10**t;return function(i){this._+=i[0];for(let s=1,e=i.length;s<e;++s)this._+=Math.round(arguments[s]*h)/h+i[s]}}class y{constructor(t){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=t==null?E:m(t)}moveTo(t,h){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+h}`}closePath(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(t,h){this._append`L${this._x1=+t},${this._y1=+h}`}quadraticCurveTo(t,h,i,s){this._append`Q${+t},${+h},${this._x1=+i},${this._y1=+s}`}bezierCurveTo(t,h,i,s,e,$){this._append`C${+t},${+h},${+i},${+s},${this._x1=+e},${this._y1=+$}`}arcTo(t,h,i,s,e){if(t=+t,h=+h,i=+i,s=+s,e=+e,e<0)throw new Error(`negative radius: ${e}`);let $=this._x1,d=this._y1,l=i-t,p=s-h,_=$-t,o=d-h,n=_*_+o*o;if(this._x1===null)this._append`M${this._x1=t},${this._y1=h}`;else if(n>u)if(!(Math.abs(o*l-p*_)>u)||!e)this._append`L${this._x1=t},${this._y1=h}`;else{let f=i-$,r=s-d,v=l*l+p*p,L=f*f+r*r,b=Math.sqrt(v),T=Math.sqrt(n),w=e*Math.tan((x-Math.acos((v+n-L)/(2*b*T)))/2),M=w/T,A=w/b;Math.abs(M-1)>u&&this._append`L${t+M*_},${h+M*o}`,this._append`A${e},${e},0,0,${+(o*f>_*r)},${this._x1=t+A*l},${this._y1=h+A*p}`}}arc(t,h,i,s,e,$){if(t=+t,h=+h,i=+i,$=!!$,i<0)throw new Error(`negative radius: ${i}`);let d=i*Math.cos(s),l=i*Math.sin(s),p=t+d,_=h+l,o=1^$,n=$?s-e:e-s;this._x1===null?this._append`M${p},${_}`:(Math.abs(this._x1-p)>u||Math.abs(this._y1-_)>u)&&this._append`L${p},${_}`,i&&(n<0&&(n=n%c+c),n>P?this._append`A${i},${i},0,1,${o},${t-d},${h-l}A${i},${i},0,1,${o},${this._x1=p},${this._y1=_}`:n>u&&this._append`A${i},${i},0,${+(n>=x)},${o},${this._x1=t+i*Math.cos(e)},${this._y1=h+i*Math.sin(e)}`)}rect(t,h,i,s){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+h}h${i=+i}v${+s}h${-i}Z`}toString(){return this._}}function q(){return new y}q.prototype=y.prototype;function C(a=3){return new y(+a)}export{y as P,C as a,q as p};
